#include <cstdio>
#include <cctype>
#include <algorithm>
#include <cstring>
using namespace std;

namespace thecold
{
	typedef long long ll;
	
	inline int read()
	{
		int res = 0; bool flag = false;
		char c = getchar();
		while(!isdigit(c))
			flag = (c == '-') , c = getchar();
		while(isdigit(c))
			res = res * 10 + (c ^ 48) , c = getchar();
		return !flag ? res : -res;
	}

	const int Max_n = 1e6 + 5;

	int prime[Max_n] , tot , n;

	ll ans , phi[Max_n];

	bool vis[Max_n];

	inline void prepare()
	{
		const int n = 1e6;

		for(int i = 2 ; i <= n ; ++ i)
		{
			if(!vis[i]) prime[ ++ tot] = i , phi[i] = i - 1;
			for(int j = 1 ; j <= tot && prime[j] * i <= n ; ++ j)
			{
				vis[i * prime[j]] = true , phi[i * prime[j]] = phi[i] * phi[prime[j]];
				if(i % prime[j] == 0) {phi[i * prime[j]] = phi[i] * prime[j]; break;}
			}
		}
		for(int i = 2 ; i <= n ; ++ i) phi[i] += phi[i - 1];
	}

	inline ll calc(const int x)
	{
		return 1ll * x * (x + 1) / 2;
	}

	inline void main()
	{
		prepare();
		while((n = read()) != 0)
		{
			int l = 1 , r; ans = 0;
			for(; l <= n ; l = r + 1)
			{
				r = n / (n / l);
				ans += (calc(r) - calc(l - 1)) * phi[n / l];
			}
			printf("%lld\n" , ans);
		}
	}
}

int main()
{
	thecold::main();
	return 0;
}
