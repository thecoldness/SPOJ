#include <cstdio>
#include <cstring>
#include <cctype>
#include <algorithm>
#include <climits>
using namespace std;

namespace thecold
{
	inline int read()
	{
		int res = 0;
		char c;
		bool flag = false;
		c = getchar();
		while(!isdigit(c))
		{
			flag = (c == '-');
			c = getchar();
		}
		while(isdigit(c))
		{
			res = res * 10 + (c ^ 48);
			c = getchar();
		}
		return !flag ? res : -res;
	}

	const int Max_n = 1e3 + 5;
	const int Max_l = 205;

	int f[Max_n][Max_l][Max_l] , c[Max_l][Max_l];
	int n , l , a[Max_n];

	inline void main()
	{
		int t = read();
		while(t --)
		{
			l = read() , n = read();
			for(int i = 1 ; i <= l ; ++ i)
				for(int j = 1 ; j <= l ; ++ j)
					c[i][j] = read();
			memset(f , 0x3f , sizeof(f));
			a[0] = 1;
			f[0][2][3] = f[0][3][2] = 0;
			for(int i = 1 ; i <= n ; ++ i)
				a[i] = read();
			for(int i = 0 ; i < n ; ++ i)
				for(int j = 1 ; j <= l ; ++ j)
					for(int k = 1 ; k <= l ; ++ k)
					{
						// if(j == k)	continue; bug
						if(j == k || j == a[i] || k == a[i])	continue;
						f[i + 1][j][k] = min(f[i + 1][j][k] , f[i][j][k] + c[a[i]][a[i + 1]]);
						f[i + 1][k][j] = min(f[i + 1][k][j] , f[i][j][k] + c[a[i]][a[i + 1]]);
						f[i + 1][j][a[i]] = min(f[i + 1][j][a[i]] , f[i][j][k] + c[k][a[i + 1]]);
						f[i + 1][a[i]][j] = min(f[i + 1][a[i]][j] , f[i][j][k] + c[k][a[i + 1]]);
						f[i + 1][k][a[i]] = min(f[i + 1][k][a[i]] , f[i][j][k] + c[j][a[i + 1]]);
						f[i + 1][a[i]][k] = min(f[i + 1][a[i]][k] , f[i][j][k] + c[j][a[i + 1]]);
					}
			int ans = INT_MAX;
			for(int i = 1 ; i <= l ; ++ i)
				for(int j = 1 ; j <= l ; ++ j)
					if(i != j)
						ans = min(ans , f[n][i][j]);
			printf("%d\n" , ans);
		}
	}
}

int main()
{
	thecold::main();
	return 0;
}
